{"version":3,"sources":["components/ActionBtns.js","components/Card.js","components/About.js","components/Saved.js","data/Quotes.js","App.js","serviceWorker.js","index.js"],"names":["ActionBtns","props","react_default","a","createElement","className","onClick","greenClick","title","Card","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","filterText","handleChange","bind","assertThisInitialized","e","setState","target","value","refs","refNum","handleSaveQuote","_this2","quotes","length","filter","quote","map","ref","key","components_ActionBtns","handleGreenClick","content","author","onChange","Component","About","Saved","savedQuotes","includes","handleDeleteSaved","Data","App","savedHistory","concat","toConsumableArray","id","quoteId","arr","temp","randomIndex","i","Math","floor","random","shuffleQuotes","Quotes","Link","to","BrowserRouter","href","Switch","Route","exact","path","render","components_Card","slice","component","components_Saved","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e365372.chunk.js","sourcesContent":["import React from 'react';\n\nconst ActionBtns = (props) => {\n  return (\n    <div className=\"action-btns\">\n      <div className=\"action-btn action-1\" onClick={props.greenClick}>\n        <div className=\"green-label\">\n          <span>Click To Save</span>\n        </div>\n      </div>\n      <div className=\"action-btn action-2\"><label title=\"Disabled\" /></div>\n      <div className=\"action-btn action-3\"><label title=\"Disabled\" /></div>\n    </div>\n  );\n}\n\nexport default ActionBtns;\n","import React, { Component } from 'react';\nimport ActionBtns from './ActionBtns';\n\n\nclass Card extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {filterText: ''};\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    this.setState({\n      filterText: e.target.value\n    });\n  }\n\n  handleGreenClick(refs, refNum) {\n    this.props.handleSaveQuote(refs, refNum);\n  }\n\n  render() {\n    let propQuotes;\n    if (this.state.filterText.length > 1) {\n      propQuotes = this.props.quotes.filter(quote => {\n        return quote.title === this.state.filterText;\n      });\n    } else {\n      propQuotes = this.props.quotes;\n    }\n\n    const quotes = propQuotes.map(quote => {\n      return (\n        <div ref={'quoteCard' + quote.key} key={quote.key} className=\"quote-card\">\n          <ActionBtns\n            greenClick={() => this.handleGreenClick(quote.key)}\n          />\n          <h4 className=\"quote-title\">{quote.title}</h4>\n          <p className=\"quote-text\">{quote.content}</p>\n          <small className=\"quote-author\">{quote.author}</small>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <div className=\"quotes-container\">\n          <div className=\"card-filter\">\n            <select value={this.state.filterText} onChange={this.handleChange}>\n              <option value=\"\">Show All</option>\n              <option value=\"Success\">Success</option>\n              <option value=\"Mentality\">Mentality</option>\n              <option value=\"Balance\">Balance</option>\n              <option value=\"Perseverance\">Perseverance</option>\n            </select>\n          </div>\n          {quotes}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React from 'react';\n\nconst About = () => {\n  return (\n    <div className=\"about\">\n      <h2 className=\"about-title\">Control Your Focus</h2>\n      <p className=\"about-text\">\n        I made this app to streamline a daily\n        practice of mine... <br /> <br /> Everyday, I select a quote\n        which I feel is powerful, from someone I admire,\n        and I make that quote the theme of my day. I\n        live the quote, for the day. <br /> <br /> This app allows\n        the user to select a theme, and a couple of quotes\n        related to the theme will be loaded, for the user to\n        choose, as the theme for their day.\n      </p>\n    </div>\n  );\n}\n\nexport default About;\n","import React, { Component } from 'react';\nimport ActionBtns from './ActionBtns';\n\n\nclass Saved extends Component {\n  render() {\n\n    let propQuotes = this.props.quotes.filter(quote => {\n      return this.props.savedQuotes.includes(quote.key);\n    });\n\n    const quotes = propQuotes.map(quote => {\n      return (\n        <div key={quote.key} className=\"quote-card\">\n          <ActionBtns />\n          <h4 className=\"quote-title\">{quote.title}</h4>\n          <p className=\"quote-text\">{quote.content}</p>\n          <div\n            className=\"undo-btn\"\n            onClick={() => this.props.handleDeleteSaved(quote.key)}>\n            <p>Remove</p>\n          </div>\n          <small className=\"quote-author\">{quote.author}</small>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"container\">\n        <div className=\"quotes-container\">\n          {quotes}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Saved;\n","const Data = [\n  {key: 1, title: \"Success\", content: \"There is nothing outside of yourself that can ever enable you to get better, stronger, richer, quicker, or smarter. Everything is within. Everything exists. Seek nothing outside of yourself.\", author: \"Miyamoto Musashi\"},\n  {key: 2, title: \"Mentality\", content: \"You may abandon your own body but you must preserve your honour.\", author: \"Miyamoto Musashi\"},\n  {key: 3, title: \"Balance\", content: \"You should not have any special fondness for a particular weapon, or anything else, for that matter. Too much is the same as not enough. Without imitating anyone else, you should have as much weaponry as suits you.\", author: \"Miyamoto Musashi\"},\n  {key: 4, title: \"Mentality\", content: \"Think lightly of yourself and deeply of the world.\", author: \"Miyamoto Musashi\"},\n  {key: 5, title: \"Mentality\", content: \"All men are the same except for their belief in their own selves, regardless of what others may think of them.\", author: \"Miyamoto Musashi\"},\n  {key: 6, title: \"Balance\", content: \"Very little is needed to make a happy life; it is all within yourself, in your way of thinking.\", author: \"Marcus Aurelius\"},\n  {key: 7, title: \"Mentality\", content: \"You have power over your mind - not outside events. Realize this, and you will find strength.\", author: \"Marcus Aurelius\"},\n  {key: 8, title: \"Success\", content: \"Waste no more time arguing about what a good man should be. Be one.\", author: \"Marcus Aurelius\"},\n  {key: 9, title: \"Balance\", content: \"If you are distressed by anything external, the pain is not due to the thing itself, but to your estimate of it; and this you have the power to revoke at any moment.\", author: \"Marcus Aurelius\"},\n  {key: 10, title: \"Mentality\", content: \"When you arise in the morning think of what a privilege it is to be alive, to think, to enjoy, to love.\", author: \"Marcus Aurelius\"},\n  {key: 11, title: \"Mentality\", content: \"I have often wondered how it is that every man loves himself more than all the rest of men, but yet sets less value on his own opinion of himself than on the opinion of others.\", author: \"Marcus Aurelius\"},\n  {key: 12, title: \"Perseverance\", content: \"Step by step walk the thousand-mile road.\", author: \"Miyamoto Musashi\"},\n  \n]\n\nexport default Data;\n","import React, { Component } from 'react';\nimport Card from './components/Card';\nimport About from './components/About';\nimport Saved from './components/Saved';\nimport Quotes from './data/Quotes';\nimport { BrowserRouter, Route, Switch, Link } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      savedQuotes: [],\n      savedHistory: [],\n    };\n    this.handleSaveQuote = this.handleSaveQuote.bind(this);\n    this.handleDeleteSaved = this.handleDeleteSaved.bind(this);\n  }\n\n  handleSaveQuote(refNum) {\n    this.setState({\n      savedQuotes: [...this.state.savedQuotes, refNum],\n      savedHistory: [...this.state.savedHistory, this.state.savedQuotes]\n    });\n  }\n\n  handleDeleteSaved(id) {\n    const savedQuotes = this.state.savedQuotes.filter(quoteId => {\n      return quoteId !== id;\n    });\n    this.setState({\n      savedQuotes: savedQuotes\n    });\n  }\n\n  shuffleQuotes(arr) {\n    let temp, randomIndex;\n    for (let i = arr.length - 1; i > -1; i--) {\n      randomIndex = Math.floor(Math.random() * i + 1)\n      temp = arr[i];\n      arr[i] = arr[randomIndex];\n      arr[randomIndex] = temp;\n    }\n    return arr;\n  }\n\n  render() {\n    let quotes = this.shuffleQuotes([...Quotes]);\n\n    let savedQuotes;\n    if (this.state.savedHistory.length > 0) {\n      savedQuotes = (\n        <Link to=\"/saved\">Saved Quotes</Link>\n      )\n    }\n    return (\n      <BrowserRouter>\n        <div className=\"\">\n          <nav>\n            <Link to=\"/\">Home</Link>\n            <Link to=\"/about\">About</Link>\n            <a href=\"https://www.github.com/jddelia\">JDelia</a>\n            {savedQuotes}\n          </nav>\n          <header>\n            <h1><Link to=\"/\"><span className=\"logo\">MindRight</span></Link></h1>\n          </header>\n          <Switch>\n            <Route exact path=\"/\" render={() =>\n              <Card\n                quotes={quotes.slice(0, 5)}\n                filterText={this.state.filterText}\n                handleSaveQuote={this.handleSaveQuote}\n                handleDeleteSaved={this.handleDeleteSaved}/>} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/saved\" render={() =>\n              <Saved\n                quotes={Quotes}\n                savedQuotes={this.state.savedQuotes}\n                handleDeleteSaved={this.handleDeleteSaved}/>} />\n          </Switch>\n          <footer>\n            <p>&copy; MINDRIGHT 2018</p>\n          </footer>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}